---
jupyterhub:
    proxy:
        https:
            enabled: true
            hosts:
                - {{ 'staging-demo' if environ('K8S_NAMESPACE') == 'staging' else 'demo' }}.aiidalab.io
            letsencrypt:
                contactEmail: aiidalab@materialscloud.org
    singleuser:
        image:
            name: aiidalab/qe
            tag: latest
            pullPolicy: Always
        cmd:
            - start-singleuser.sh
        extraEnv:
            JUPYTERHUB_SINGLEUSER_APP: notebook.notebookapp.NotebookApp
            CONTAINER_LIFETIME: "12:00:00"
        cpu:
            guarantee: 1.5
            limit: 1.5
        memory:
            guarantee: 5G
            limit: 5G
        storage:
            type: none
            extraVolumes:
                - name: hub-templates
                  configMap:
                      name: hub-templates
                - name: hub-external
                  configMap:
                      name: hub-external
                - name: etc-jupyter
                  configMap:
                      name: user-etc-jupyter
                - name: notebook-static-custom
                  configMap:
                      name: notebook-static-custom
            extraVolumeMounts:
                - mountPath: /etc/jupyterhub/templates
                  name: hub-templates
                - mountPath: /usr/local/share/jupyterhub/static/external
                  name: hub-external
                - mountPath: /etc/jupyter
                  name: etc-jupyter
                - mountPath: /opt/conda/lib/python3.9/site-packages/notebook/static/custom
                  name: notebook-static-custom
    hub:
        readinessProbe:
            enabled: true
            initialDelaySeconds: 5 # Increase delay to allow Hub to start
            periodSeconds: 10 # Frequency of the probe check
            failureThreshold: 5 # Allow 5 failures before marking unhealthy
            timeoutSeconds: 5 # Timeout for the probe check
        db:
            pvc:
                storageClassName: default
                storage: 1Gi
        extraConfig:
            customTemplateVars: |
                c.JupyterHub.template_vars = {
                    'include_policies': {{ environ('INCLUDE_POLICIES') }},
                }
            00-logo: |
                c.JupyterHub.logo_file = "/usr/local/share/jupyterhub/static/external/aiidalab-wide-logo.png"
            02-spawner: |
                c.KubeSpawner.http_timeout = 300
            03-templates: |
                c.JupyterHub.template_paths.append('/etc/jupyterhub/templates')
            04-navigation-handler: |
                from jupyterhub.handlers import BaseHandler

                include_policies = {{ environ('INCLUDE_POLICIES') }}

                class AboutHandler(BaseHandler):
                    def get(self):
                        self.write(self.render_template("about.html", sync=True))

                class FAQHandler(BaseHandler):
                    def get(self):
                        self.write(self.render_template("faq.html", sync=True))

                if include_policies:
                    class TermsOfUseHandler(BaseHandler):
                        def get(self):
                            self.write(self.render_template("terms-of-use.html", sync=True))

                    class PrivacyPolicyHandler(BaseHandler):
                        def get(self):
                            self.write(self.render_template("privacy-policy.html", sync=True))

                routes = [(r"about", AboutHandler)]
                if include_policies:
                    routes.extend(
                        [
                            (r"terms-of-use", TermsOfUseHandler),
                            (r"privacy-policy", PrivacyPolicyHandler),
                        ]
                    )
                routes.append((r"faq", FAQHandler))
                c.JupyterHub.extra_handlers.extend(routes)

            20-announce: |
                c.JupyterHub.template_vars = {
                    'announcement_login': 'The site is in beta testing. Please report any issue you might encounter in the <a href="https://github.com/unkcpz/aiidalab-demo-server/issues/new">AiiDAlab Demo GitHub repository</a>.',
                    'announcement': 'The site is in beta testing. Use it at your own risk.',
                }
        extraVolumes:
            - name: hub-templates
              configMap:
                  name: hub-templates
            - name: hub-external
              configMap:
                  name: hub-external
        extraVolumeMounts:
            - mountPath: /etc/jupyterhub/templates
              name: hub-templates
            - mountPath: /usr/local/share/jupyterhub/static/external
              name: hub-external
        config:
            JupyterHub:
                authenticator_class: "github"
            GitHubOAuthenticator:
                client_id: {{ environ('OAUTH_CLIENT_ID') }}
                client_secret: {{ environ('OAUTH_CLIENT_SECRET') }}
                oauth_callback_url: {{ environ('OAUTH_CALLBACK_URL') }}
                allow_all: true
                #allowed_organizations: ['aiidalab']
                admin_users:
                    - unkcpz
                    - yakutovicha
                    - mikibonacci
                    - giovannipizzi
                    - edan-bainglass

    cull:
        enabled: true
        users: true
        adminUsers: true
        timeout: 43200 # 12 hours
        every: 300 # 5 minutes
        maxAge: 43200 # 12 hours
